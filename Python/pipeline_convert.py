# -*- coding: utf-8 -*-
"""
Created on Fri Aug 28 09:00:32 2020

@author: andy
"""

# Generated by Selenium IDE

import pandas as pd

from pathlib import Path

from datetime import datetime




# =============================================================================
# Global varaibles
# =============================================================================
question_statistics=pd.DataFrame()
difficult_threshold={"min":0.3,"max":0.9}

# =============================================================================
# Functions
# =============================================================================
def get_file_path(directory_name,filename):    
    director_path=Path(directory_name)
    full_file_path=director_path / filename
    return full_file_path
    

    
# # =============================================================================
# # Import Data  
# # =============================================================================

this_filename=get_file_path(r"C:\Users\Andy.JIVEDIVE.000\Accelerate People\Accelerate People - Reporting\Archive","Assessment Pipeline Forecasting Sample.xlsx")
output_filename=get_file_path(r"C:\Users\Andy.JIVEDIVE.000\Accelerate People\Accelerate People - Reporting\Archive","output.xlsx")


#dataset=pd.read_excel(data_orginal_file, sheet_name="TestData",skiprows=range(1,1))
sheet_names=assessment_pipline_df=pd.read_excel(this_filename,sheet_name=None)
sheet_name_list={}
final_df=pd.DataFrame()

for sheet_name in sheet_names:
    print(sheet_name)
    if (sheet_name != "Master"):
        sheet_data_df=assessment_pipline_df=pd.read_excel(this_filename,sheet_name=sheet_name,skiprows=[0] )
        sheet_name=sheet_name.strip()
        #sheet_name_list.append(sheet_name)
        
        #Remove last two lins one blank one totals
        sheet_data_df=sheet_data_df.iloc[:-2]
        
        #Remove the total column and blank first column
        sheet_data_df=sheet_data_df.iloc[:,1:-1]
        
        sheet_date_convert = datetime.strptime(sheet_name, "%b-%y")
        sheet_data_df['date']=sheet_date_convert
        sheet_data_df['sheet']=sheet_name
        print(sheet_date_convert.strftime('%Y-%m-%d'))
        sheet_name_list.update({sheet_name:sheet_data_df})
        
        #Create index values
        training_providers=sheet_data_df['Training Provider']
        standard_codes=sheet_data_df.columns[1:-1]
        
        #Interate over rows
        for index,row in sheet_data_df.iterrows():
            
            training_provider=row[0]
            standard_names=row.index[1:-2]
            values=row.values[1:-2]
            frame_df=pd.DataFrame({"standard":standard_names,"expected_numbers":values})
            frame_df['date']=sheet_date_convert
            frame_df['sheet_name']=sheet_name
            frame_df['training_provider']=training_provider
            
            
            final_df=final_df.append(frame_df,ignore_index=True)
            
            
            print(training_provider)
            #for i in range(2,len(row)):
final_df.to_excel(output_filename)
                
                
     